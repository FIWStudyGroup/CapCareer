
answer_id-array ans backend 
sql-query schreiben, dem answer_id übergeben wird, für jedes element des arrays
select job_id from job_skill where skill_id = 1 AND rating < 5;

answer_id mit rating verknüpfen:
ALTER TABLE answer ADD rating INT;
UPDATE answer SET rating = 3 WHERE answer LIKE 'mitt%';
UPDATE answer SET rating = 5 WHERE answer LIKE 'stark%';

doppelte einträge entfernt

[2, 5, 7, 11, 13, 17] beispiel-array mit antwort-ids, index+1 entspricht frage = skill

rating in answer und entsprechung in job_skill
1: 0, 1
3: 2, 3
5: 4, 5

function gibmirpassendejobs([i]) muss im Backend implementiert werden
mit diesem sql-query:

SELECT a.rating, js.rating, js.job_id FROM answer a
JOIN job_skill js WHERE
js.skill_id = _2_ AND a.id = _4_ AND js.rating <= a.rating 
(_2_ und _4_ sind platzhalter, 
js.skill_id (2) ist der index+1 im answer-array = id der frage = id in skills momentan
a.id ist der wert, der dort gespeichert ist)

das ergebnis dieser abfrage soll in view gespeichert werden - aber wie?
erste regebnisse:
mit der ersten abfrage (1. antwort aus dem array) erstellen wir den view
danach werden die antworten dort gespeichert (was gar nicht geht bzw. so einfach ist, leider)

CREATE VIEW passende_jobs AS
SELECT a.rating AS answer_rating, js.rating, js.job_id FROM answer a
JOIN job_skill js WHERE
js.skill_id = 1 AND a.id = 3 AND js.rating <= a.rating

alternativ auch mit tabelle, dann nämlich insert der weiteren antworten einfacher:

CREATE TABLE passende_jobs AS
SELECT a.rating AS answer_rating, js.rating, js.job_id FROM answer a
JOIN job_skill js WHERE
js.skill_id = 1 AND a.id = 3 AND js.rating <= a.rating

INSERT INTO passende_jobs VALUES (answer_rating, js.rating, js.job_id)
SELECT a.rating AS answer_rating, js.rating, js.job_id FROM answer a
JOIN job_skill js WHERE
js.skill_id = 2 AND a.id = 2 AND js.rating <= a.rating;



frage beantwortet --> 

jobs merken array oder view



notizen, ideen etc.:

array passende_jobs:
jobs zählen
die am meisten vorkommen, werden Ergebnis

grenze einbauen: muss mind. x-mal vorkommen



antwort-ids speichern in array
ODER

nach jeder antwort sql-abfrage 'alle jobs, die passen' antwort >= skill_rating bei job

wenn array:
diese anfrage für alle elemente d. arrays

ODER
view, in den die ergebnisse eingetragen werden
count ausführen, sortieren, ggf. limit setzen
und dann an backend melden
view droppen

1. antwort --> view erzeugen
ausblick: mehrere views (unterschiedliche namen vergeben)

INSERT INTO view_passende_jobs (select job_id from job_skill where skill_id = 1 AND rating < 5;)

bsp. view-syntax:
CREATE VIEW `current_questionnaire_answers_text`  AS SELECT `cqa`.`sequence` AS `sequence`, `cqa`.`answer_id` AS `answer_id`, `a`.`answer` AS `answer` FROM (`current_questionnaire_answers` `cqa` join `answer` `a` on(`cqa`.`answer_id` = `a`.`id`)) ORDER BY `cqa`.`sequence` ASC ;




ergebnisse sql-abfrage speichern
in array
fkt. nachbauen und zählen wie oft job 1-11 vorkommen

array sortieren (absteigend)

sql-abfrage gib mir job i-ii

ergebnis in tabelle laden

